name: Deploy to AWS

on:
  workflow_run:
    workflows: ["Django CI/CD Pipeline"]
    branches: [main]
    types:
      - completed

jobs:
  deploy-aws:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install awscli

      - name: Create deployment package
        run: |
          # Create static directory
          mkdir -p static

          # Collect static files
          echo "SECRET_KEY=temp-key" >> .env
          echo "DEBUG=False" >> .env
          echo "ALLOWED_HOSTS=*" >> .env
          python manage.py collectstatic --noinput

          # Create deployment package
          zip -r deployment-package.zip . -x "*.git*" "*.env*" "__pycache__/*" "*.pyc"

      - name: Upload to S3
        run: |
          aws s3 cp deployment-package.zip s3://${{ secrets.AWS_S3_BUCKET }}/deployments/

      - name: Deploy to Elastic Beanstalk
        run: |
          # Create application version
          aws elasticbeanstalk create-application-version \
            --application-name ${{ secrets.AWS_EB_APPLICATION }} \
            --version-label v-$(date +%Y%m%d-%H%M%S)-${GITHUB_SHA:0:8} \
            --source-bundle S3Bucket=${{ secrets.AWS_S3_BUCKET }},S3Key=deployments/deployment-package.zip
            
          # Deploy to environment
          aws elasticbeanstalk update-environment \
            --application-name ${{ secrets.AWS_EB_APPLICATION }} \
            --environment-name ${{ secrets.AWS_EB_ENVIRONMENT }} \
            --version-label v-$(date +%Y%m%d-%H%M%S)-${GITHUB_SHA:0:8}

      - name: Wait for deployment
        run: |
          aws elasticbeanstalk wait environment-updated \
            --application-name ${{ secrets.AWS_EB_APPLICATION }} \
            --environment-name ${{ secrets.AWS_EB_ENVIRONMENT }}

      - name: Run migrations on AWS
        run: |
          # This would typically be done through EB configuration or a separate script
          echo "ðŸ”„ Running migrations on AWS..."
          echo "Migration commands would be executed on the AWS instance"
          # Example: Use AWS SSM to run commands on EC2 instances
          # aws ssm send-command --document-name "AWS-RunShellScript" \
          #   --parameters 'commands=["cd /var/app/current && python manage.py migrate"]' \
          #   --targets "Key=tag:Environment,Values=${{ secrets.AWS_EB_ENVIRONMENT }}"
