name: Deploy to VPS

on:
  workflow_run:
    workflows: ["Django CI/CD Pipeline"]
    branches: [main]
    types:
      - completed

jobs:
  deploy-vps:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}

      - name: Add server to known hosts
        run: |
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to VPS
        run: |
          echo "🚀 Starting VPS deployment..."

          # Create deployment script
          cat > deploy.sh << 'EOF'
          #!/bin/bash
          set -e

          APP_DIR=${{ secrets.VPS_APP_PATH }}
          BACKUP_DIR=${{ secrets.VPS_APP_PATH }}_backup_$(date +%Y%m%d_%H%M%S)

          echo "📦 Creating backup..."
          cp -r $APP_DIR $BACKUP_DIR

          echo "🔄 Updating application..."
          cd $APP_DIR

          # Pull latest code
          git pull origin main

          # Activate virtual environment
          source venv/bin/activate

          # Install/update dependencies
          pip install -r requirements.txt

          # Create static directory
          mkdir -p static

          # Run migrations in correct order
          python manage.py migrate contenttypes
          python manage.py migrate auth
          python manage.py migrate accounts
          python manage.py migrate

          # Collect static files
          python manage.py collectstatic --noinput

          # Restart services
          echo "🔄 Restarting services..."
          sudo systemctl restart gunicorn
          sudo systemctl restart nginx

          # Optional: restart celery if using
          # sudo systemctl restart celery
          # sudo systemctl restart celery-beat

          echo "✅ Deployment completed successfully!"
          EOF

          # Make script executable and run it
          chmod +x deploy.sh

          # Copy and execute deployment script on VPS
          scp deploy.sh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/tmp/
          ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} 'bash /tmp/deploy.sh'

      - name: Verify deployment
        run: |
          echo "🔍 Verifying deployment..."
          # Add health check commands here
          # curl -f ${{ secrets.VPS_URL }}/health/ || exit 1
          echo "Deployment verification placeholder"

      - name: Cleanup
        run: |
          ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} 'rm -f /tmp/deploy.sh'
